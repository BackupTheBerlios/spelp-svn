//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.0-b15-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2006.10.27 at 03:11:12 PM CEST 
//


package org.eclipse.epf.uma._1_0;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElements;
import javax.xml.bind.annotation.XmlType;


/**
 * Comprises of a list of interface specifications (similar to operation declarations) that express inputs and outputs for a process component.  These interface specifications are expressed using Task Descriptors which are not linked to Tasks that are related to Work Product Descriptors as well as optional a Role Descriptor.
 * 
 * <p>Java class for ProcessComponentInterface complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="ProcessComponentInterface">
 *   &lt;complexContent>
 *     &lt;extension base="{http://www.eclipse.org/epf/uma/1.0.3}BreakdownElement">
 *       &lt;choice maxOccurs="unbounded" minOccurs="0">
 *         &lt;element name="InterfaceSpecification" type="{http://www.eclipse.org/epf/uma/1.0.3}TaskDescriptor"/>
 *         &lt;element name="InterfaceIO" type="{http://www.eclipse.org/epf/uma/1.0.3}WorkProductDescriptor"/>
 *       &lt;/choice>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ProcessComponentInterface", propOrder = {
    "interfaceSpecificationOrInterfaceIO"
})
public class ProcessComponentInterface
    extends BreakdownElement
{

    @XmlElements({
        @XmlElement(name = "InterfaceIO", required = true, type = WorkProductDescriptor.class),
        @XmlElement(name = "InterfaceSpecification", required = true, type = TaskDescriptor.class)
    })
    protected List<BreakdownElement> interfaceSpecificationOrInterfaceIO;

    /**
     * Gets the value of the interfaceSpecificationOrInterfaceIO property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the interfaceSpecificationOrInterfaceIO property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getInterfaceSpecificationOrInterfaceIO().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link WorkProductDescriptor }
     * {@link TaskDescriptor }
     * 
     * 
     */
    public List<BreakdownElement> getInterfaceSpecificationOrInterfaceIO() {
        if (interfaceSpecificationOrInterfaceIO == null) {
            interfaceSpecificationOrInterfaceIO = new ArrayList<BreakdownElement>();
        }
        return this.interfaceSpecificationOrInterfaceIO;
    }

}
