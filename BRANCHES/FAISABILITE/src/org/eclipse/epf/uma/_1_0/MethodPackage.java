//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.0-b15-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2006.10.27 at 03:11:12 PM CEST 
//


package org.eclipse.epf.uma._1_0;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElements;
import javax.xml.bind.annotation.XmlType;


/**
 * An abstract class for packaging Method Elements.  All Method Elements shall be located in exactly one of Method Package's concrete specializations (e.g. Content Package).   Method Package defines common properties for all of its specializations. Elements are organized in Method Packages to structure large scale of method content and processes as well as to define a mechanism for reuse.  Method Elements from one package can reuse element from other packages by defining a reusedPackages link.  For example, a work product defined in one package can be used as an input for Tasks defined in other packages.  By reusing it from one common place (i.e. the package in which it has been defined) ensures that no redundant definitions of the same elements are required.  Also maintenance of method content is greatly improved as changes can be performed in only one place.  Note, that other packages will introduce more specializations of Method Package, e.g. Process Package and Process Component.
 * 
 * <p>Java class for MethodPackage complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="MethodPackage">
 *   &lt;complexContent>
 *     &lt;extension base="{http://www.eclipse.org/epf/uma/1.0.3}MethodElement">
 *       &lt;choice maxOccurs="unbounded" minOccurs="0">
 *         &lt;element name="ReusedPackage" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="MethodPackage" type="{http://www.eclipse.org/epf/uma/1.0.3}MethodPackage"/>
 *       &lt;/choice>
 *       &lt;attribute name="global" type="{http://www.w3.org/2001/XMLSchema}boolean" />
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "MethodPackage", propOrder = {
    "reusedPackageOrMethodPackage"
})
public class MethodPackage
    extends MethodElement
{

    @XmlElements({
        @XmlElement(name = "MethodPackage", required = true, type = MethodPackage.class),
        @XmlElement(name = "ReusedPackage", required = true, type = String.class)
    })
    protected List<Object> reusedPackageOrMethodPackage;
    @XmlAttribute
    protected Boolean global;

    /**
     * Gets the value of the reusedPackageOrMethodPackage property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the reusedPackageOrMethodPackage property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getReusedPackageOrMethodPackage().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link MethodPackage }
     * {@link String }
     * 
     * 
     */
    public List<Object> getReusedPackageOrMethodPackage() {
        if (reusedPackageOrMethodPackage == null) {
            reusedPackageOrMethodPackage = new ArrayList<Object>();
        }
        return this.reusedPackageOrMethodPackage;
    }

    /**
     * Gets the value of the global property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isGlobal() {
        return global;
    }

    /**
     * Sets the value of the global property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setGlobal(Boolean value) {
        this.global = value;
    }

}
